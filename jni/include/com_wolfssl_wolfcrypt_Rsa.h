/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_wolfssl_wolfcrypt_Rsa */

#ifndef _Included_com_wolfssl_wolfcrypt_Rsa
#define _Included_com_wolfssl_wolfcrypt_Rsa
#ifdef __cplusplus
extern "C" {
#endif
#undef com_wolfssl_wolfcrypt_Rsa_NULL
#define com_wolfssl_wolfcrypt_Rsa_NULL 0LL
/*
 * Class:     com_wolfssl_wolfcrypt_Rsa
 * Method:    mallocNativeStruct
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_com_wolfssl_wolfcrypt_Rsa_mallocNativeStruct
  (JNIEnv *, jobject);

/*
 * Class:     com_wolfssl_wolfcrypt_Rsa
 * Method:    decodeRawPublicKey
 * Signature: (Ljava/nio/ByteBuffer;JLjava/nio/ByteBuffer;J)V
 */
JNIEXPORT void JNICALL Java_com_wolfssl_wolfcrypt_Rsa_decodeRawPublicKey__Ljava_nio_ByteBuffer_2JLjava_nio_ByteBuffer_2J
  (JNIEnv *, jobject, jobject, jlong, jobject, jlong);

/*
 * Class:     com_wolfssl_wolfcrypt_Rsa
 * Method:    decodeRawPublicKey
 * Signature: ([BJ[BJ)I
 */
JNIEXPORT jint JNICALL Java_com_wolfssl_wolfcrypt_Rsa_decodeRawPublicKey___3BJ_3BJ
  (JNIEnv *, jobject, jbyteArray, jlong, jbyteArray, jlong);

/*
 * Class:     com_wolfssl_wolfcrypt_Rsa
 * Method:    exportRawPublicKey
 * Signature: (Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
 */
JNIEXPORT void JNICALL Java_com_wolfssl_wolfcrypt_Rsa_exportRawPublicKey__Ljava_nio_ByteBuffer_2Ljava_nio_ByteBuffer_2
  (JNIEnv *, jobject, jobject, jobject);

/*
 * Class:     com_wolfssl_wolfcrypt_Rsa
 * Method:    exportRawPublicKey
 * Signature: ([B[J[B[J)I
 */
JNIEXPORT jint JNICALL Java_com_wolfssl_wolfcrypt_Rsa_exportRawPublicKey___3B_3J_3B_3J
  (JNIEnv *, jobject, jbyteArray, jlongArray, jbyteArray, jlongArray);

/*
 * Class:     com_wolfssl_wolfcrypt_Rsa
 * Method:    makeKey
 * Signature: (IJLcom/wolfssl/wolfcrypt/Rng;)V
 */
JNIEXPORT void JNICALL Java_com_wolfssl_wolfcrypt_Rsa_makeKey
  (JNIEnv *, jobject, jint, jlong, jobject);

#ifdef __cplusplus
}
#endif
#endif
